AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  burguerhouse-api-sam

  Sample SAM Template for burguerhouse-api-sam
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  UsersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: burguerhouse/
      Handler: app.lambdaUserHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DATABASE_URL: postgresql://postgres:senha123@172.23.0.3:5432/postgres?schema=public
      Events:
        GetAllDataFromRelationShortSyntax:
          Type: Api
          Properties:
            Path: /users/{id}/{relation}
            Method: get
        GetAllDataFromRelationLongSyntax:
          Type: Api
          Properties:
            Path: /users/{id}/relationships/{relation}
            Method: get
        GetAllUsers:
          Type: Api
          Properties:
            Path: /users
            Method: get
        GetUserById:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: get
        CreateUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
        UpdateUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: patch
        DeleteUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: delete
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts
        Loader:
        - .prisma=file
        - .so.node=file
        AssetNames: '[name]'
  IngredientsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: burguerhouse/
      Handler: app.lambdaIngredientHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DATABASE_URL: postgresql://postgres:senha123@172.23.0.3:5432/postgres?schema=public
      Events:
        GetAllIngredients:
          Type: Api
          Properties:
            Path: /ingredients
            Method: get
        GetIngredientById:
          Type: Api
          Properties:
            Path: /ingredients/{id}
            Method: get
        CreateIngredient:
          Type: Api
          Properties:
            Path: /ingredients
            Method: post
        UpdateIngredient:
          Type: Api
          Properties:
            Path: /ingredients/{id}
            Method: patch
        DeleteIngredient:
          Type: Api
          Properties:
            Path: /ingredients/{id}
            Method: delete
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts
        Loader:
        - .prisma=file
        - .so.node=file
        AssetNames: '[name]'
  SnacksFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: burguerhouse/
      Handler: app.lambdaSnackHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DATABASE_URL: postgresql://postgres:senha123@172.23.0.3:5432/postgres?schema=public
      Events:
        GetAllDataFromRelationShortSyntax:
          Type: Api
          Properties:
            Path: /snacks/{id}/{relation}
            Method: get
        GetAllDataFromRelationLongSyntax:
          Type: Api
          Properties:
            Path: /snacks/{id}/relationships/{relation}
            Method: get
        GetAllSnacks:
          Type: Api
          Properties:
            Path: /snacks
            Method: get
        GetSnackById:
          Type: Api
          Properties:
            Path: /snacks/{id}
            Method: get
        CreateSnack:
          Type: Api
          Properties:
            Path: /snacks
            Method: post
        UpdateSnack:
          Type: Api
          Properties:
            Path: /snacks/{id}
            Method: patch
        DeleteSnack:
          Type: Api
          Properties:
            Path: /snacks/{id}
            Method: delete
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts
        Loader:
        - .prisma=file
        - .so.node=file
        AssetNames: '[name]'
  MenusFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: burguerhouse/
      Handler: app.lambdaMenuHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DATABASE_URL: postgresql://postgres:senha123@172.23.0.3:5432/postgres?schema=public
      Events:
        GetAllDataFromRelationShortSyntax:
          Type: Api
          Properties:
            Path: /menus/{id}/{relation}
            Method: get
        GetAllDataFromRelationLongSyntax:
          Type: Api
          Properties:
            Path: /menus/{id}/relationships/{relation}
            Method: get
        GetAllMenus:
          Type: Api
          Properties:
            Path: /menus
            Method: get
        GetMenuById:
          Type: Api
          Properties:
            Path: /menus/{id}
            Method: get
        CreateMenu:
          Type: Api
          Properties:
            Path: /menus
            Method: post
        UpdateMenu:
          Type: Api
          Properties:
            Path: /menus/{id}
            Method: patch
        DeleteMenu:
          Type: Api
          Properties:
            Path: /menus/{id}
            Method: delete
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts
        Loader:
        - .prisma=file
        - .so.node=file
        AssetNames: '[name]'
  OrdersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: burguerhouse/
      Handler: app.lambdaOrderHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          DATABASE_URL: postgresql://postgres:senha123@172.23.0.3:5432/postgres?schema=public
      Events:
        GetAllDataFromRelationShortSyntax:
          Type: Api
          Properties:
            Path: /orders/{id}/{relation}
            Method: get
        GetAllDataFromRelationLongSyntax:
          Type: Api
          Properties:
            Path: /orders/{id}/relationships/{relation}
            Method: get
        GetAllOrder:
          Type: Api
          Properties:
            Path: /orders
            Method: get
        GetOrderById:
          Type: Api
          Properties:
            Path: /orders/{id}
            Method: get
        CreateOrder:
          Type: Api
          Properties:
            Path: /orders
            Method: post
        UpdateOrder:
          Type: Api
          Properties:
            Path: /orders/{id}
            Method: patch
        DeleteOrder:
          Type: Api 
          Properties:
            Path: /orders/{id}
            Method: delete
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts
        Loader:
        - .prisma=file
        - .so.node=file
        AssetNames: '[name]'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
